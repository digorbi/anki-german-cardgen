name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event.base_ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Read Python version
        id: pyver
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ steps.pyver.outputs.version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run linter
        run: ruff check .
      - name: Run type checks
        run: mypy .
      - name: Run tests
        run: pytest --disable-warnings

  build-macos-intel:
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Bundle dependencies
        run: python scripts/bundle.py
      - name: Create Intel build archive
        run: |
          mkdir -p build/anki-german-cardgen
          cp -r plugin/* core prompts templates build/anki-german-cardgen/
          cd build
          zip -r anki-german-cardgen-${{ github.ref_name }}-macos-x86_64.zip anki-german-cardgen

  build-macos-arm:
    needs: test
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Bundle dependencies
        run: python scripts/bundle.py
      - name: Create ARM build archive
        run: |
          mkdir -p build/anki-german-cardgen
          cp -r plugin/* core prompts templates build/anki-german-cardgen/
          cd build
          zip -r anki-german-cardgen-${{ github.ref_name }}-macos-arm64.zip anki-german-cardgen

release:
  needs: [build-macos-intel, build-macos-arm]
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3

    - name: Install GitHub CLI
      run: sudo apt-get update && sudo apt-get install -y gh

    - name: Publish GitHub Release
      run: |
        gh release create "${{ github.ref_name }}" \
          --title "anki-german-cardgen ${{ github.ref_name }}" \
          ./build/anki-german-cardgen-${{ github.ref_name }}-macos-x86_64.zip \
          ./build/anki-german-cardgen-${{ github.ref_name }}-macos-arm64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}